---
kind: ScalarType
version: v1
definition:
  name: int32
  graphql:
    typeName: int32

---
kind: BooleanExpressionType
version: v1
definition:
  name: int4_bool_exp
  operand:
    scalar:
      type: int32
      comparisonOperators:
        - name: _eq
          argumentType: int32!
        - name: _gt
          argumentType: int32!
        - name: _gte
          argumentType: int32!
        - name: _in
          argumentType: "[int32!]!"
        - name: _lt
          argumentType: int32!
        - name: _lte
          argumentType: int32!
        - name: _neq
          argumentType: int32!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: int4
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: int4_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: int4
  representation: int32
  graphql:
    comparisonExpressionTypeName: int32_comparison_exp

---
kind: ScalarType
version: v1
definition:
  name: string
  graphql:
    typeName: string

---
kind: BooleanExpressionType
version: v1
definition:
  name: varchar_bool_exp
  operand:
    scalar:
      type: string
      comparisonOperators:
        - name: _eq
          argumentType: string!
        - name: _gt
          argumentType: string!
        - name: _gte
          argumentType: string!
        - name: _ilike
          argumentType: string!
        - name: _in
          argumentType: "[string!]!"
        - name: _iregex
          argumentType: string!
        - name: _like
          argumentType: string!
        - name: _lt
          argumentType: string!
        - name: _lte
          argumentType: string!
        - name: _neq
          argumentType: string!
        - name: _nilike
          argumentType: string!
        - name: _niregex
          argumentType: string!
        - name: _nlike
          argumentType: string!
        - name: _nregex
          argumentType: string!
        - name: _regex
          argumentType: string!
        - name: starts_with
          argumentType: string!
        - name: ts_match_tt
          argumentType: string!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: varchar
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: varchar_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: varchar
  representation: string
  graphql:
    comparisonExpressionTypeName: string_comparison_exp

---
kind: ScalarType
version: v1
definition:
  name: bigdecimal
  graphql:
    typeName: bigdecimal

---
kind: BooleanExpressionType
version: v1
definition:
  name: numeric_bool_exp
  operand:
    scalar:
      type: bigdecimal
      comparisonOperators:
        - name: _eq
          argumentType: bigdecimal!
        - name: _gt
          argumentType: bigdecimal!
        - name: _gte
          argumentType: bigdecimal!
        - name: _in
          argumentType: "[bigdecimal!]!"
        - name: _lt
          argumentType: bigdecimal!
        - name: _lte
          argumentType: bigdecimal!
        - name: _neq
          argumentType: bigdecimal!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: numeric
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: numeric_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: numeric
  representation: bigdecimal
  graphql:
    comparisonExpressionTypeName: bigdecimal_comparison_exp

---
kind: ScalarType
version: v1
definition:
  name: int64
  graphql:
    typeName: int64

---
kind: BooleanExpressionType
version: v1
definition:
  name: int8_bool_exp
  operand:
    scalar:
      type: int64
      comparisonOperators:
        - name: _eq
          argumentType: int64!
        - name: _gt
          argumentType: int64!
        - name: _gte
          argumentType: int64!
        - name: _in
          argumentType: "[int64!]!"
        - name: _lt
          argumentType: int64!
        - name: _lte
          argumentType: int64!
        - name: _neq
          argumentType: int64!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: int8
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: int8_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: int8
  representation: int64
  graphql:
    comparisonExpressionTypeName: int64_comparison_exp

---
kind: AggregateExpression
version: v1
definition:
  name: int4_agg_exp
  operand:
    scalar:
      aggregatedType: int32
      aggregationFunctions:
        - name: avg
          returnType: bigdecimal
        - name: bit_and
          returnType: int32
        - name: bit_or
          returnType: int32
        - name: bit_xor
          returnType: int32
        - name: max
          returnType: int32
        - name: min
          returnType: int32
        - name: stddev
          returnType: bigdecimal
        - name: stddev_pop
          returnType: bigdecimal
        - name: stddev_samp
          returnType: bigdecimal
        - name: sum
          returnType: int64
        - name: var_pop
          returnType: bigdecimal
        - name: var_samp
          returnType: bigdecimal
        - name: variance
          returnType: bigdecimal
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: int4
          functionMapping:
            avg:
              name: avg
            bit_and:
              name: bit_and
            bit_or:
              name: bit_or
            bit_xor:
              name: bit_xor
            max:
              name: max
            min:
              name: min
            stddev:
              name: stddev
            stddev_pop:
              name: stddev_pop
            stddev_samp:
              name: stddev_samp
            sum:
              name: sum
            var_pop:
              name: var_pop
            var_samp:
              name: var_samp
            variance:
              name: variance
  count:
    enable: true
    returnType: int64
  countDistinct:
    enable: true
    returnType: int64
  graphql:
    selectTypeName: int4_agg_exp

---
kind: AggregateExpression
version: v1
definition:
  name: varchar_agg_exp
  operand:
    scalar:
      aggregatedType: string
      aggregationFunctions:
        - name: max
          returnType: string
        - name: min
          returnType: string
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: varchar
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
    returnType: int64
  countDistinct:
    enable: true
    returnType: int64
  graphql:
    selectTypeName: varchar_agg_exp

---
kind: OrderByExpression
version: v1
definition:
  name: int32_order_by_exp
  operand:
    scalar:
      orderedType: int32
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: int32_order_by_exp

---
kind: OrderByExpression
version: v1
definition:
  name: string_order_by_exp
  operand:
    scalar:
      orderedType: string
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: string_order_by_exp

